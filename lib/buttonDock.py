
from PyQt5 import QtCore, QtGui, QtWidgets

from lib.mydock import myDock
from lib.flowlayout import FlowLayout


# dock code originally generated by designer
# then trimmed to essentials and tweaked

class buttonDock(myDock):
    docklist = {}

    def __init__(self, parent, title):
        super().__init__(parent)
        # each button dock remembers what buttons it wants
        self.mybuttons = {}
        self.setWindowTitle(title)
        self.docklist[title] = self
        self.setObjectName(title)
                # stuff left out
        # size policy
        # floating=false
        self.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.buttonBox = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonBox.sizePolicy().hasHeightForWidth())
        self.buttonBox.setSizePolicy(sizePolicy)
        self.buttonBox.setObjectName("buttonBox")
        self.mylayout = FlowLayout(self.buttonBox)
        self.mylayout.setContentsMargins(0, 0, 0, 0)
        ### default buttons could go here
        # button = QtWidgets.QPushButton(self) or QToolButton?
        # self.mylayout.addWidget(button)
        self.setWidget(self.buttonBox)
        parent.addDockWidget(QtCore.Qt.DockWidgetArea(4), self) # XXXX
        # XXX ask for buttons?

class commandPushButton(QtWidgets.QToolButton):
    # this is a push button that remembers what it is suppose to do
    def __init__(self, name, command,parent, functor):
        super().__init__(parent)
        self.setText(name)
        self.command = command
        self.setToolTip(command)
        self.actionfunc = functor
        ## dunno if all this goo is needed, but designer emits it with gridview
        #sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        #sizePolicy.setHorizontalStretch(0)
        #sizePolicy.setVerticalStretch(0)
        #sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        #self.setSizePolicy(sizePolicy)
        self.setObjectName(name) # XX redundant? merge name and data for use?
        self.clicked.connect(self.pushButtonAction)
        parent.layout().addWidget(self)

    @QtCore.pyqtSlot()
    def pushButtonAction(self):
        self.actionfunc(self.command, self.text())

 
